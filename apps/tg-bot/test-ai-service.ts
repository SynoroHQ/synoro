import { answerQuestion, classifyMessageType } from "./src/services/ai-service";

async function testClassifyMessageType() {
  console.log("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π...\n");

  const testMessages = [
    "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?",
    "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?",
    "–ö—É–ø–∏–ª —Ö–ª–µ–± –∑–∞ 45 —Ä—É–±–ª–µ–π",
    "–ü—Ä–∏–≤–µ—Ç!",
    "–°–∫–æ–ª—å–∫–æ —è –ø–æ—Ç—Ä–∞—Ç–∏–ª –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã?",
    "–ù—É–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É",
    "—Ç–µ—Å—Ç",
  ];

  for (const message of testMessages) {
    console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ: "${message}"`);
    try {
      const result = await classifyMessageType(message);
      console.log(`  –¢–∏–ø: ${result.type}`);
      console.log(`  –ü–æ–¥—Ç–∏–ø: ${result.subtype || "–Ω–µ—Ç"}`);
      console.log(`  –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${result.confidence}`);
      console.log(`  –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å: ${result.need_logging ? "–¥–∞" : "–Ω–µ—Ç"}`);
    } catch (error) {
      console.log(`  –û—à–∏–±–∫–∞: ${error}`);
    }
    console.log();
  }
}

async function testAnswerQuestion() {
  console.log("üí¨ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã...\n");

  const testQuestions = [
    { text: "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?", type: "question", subtype: "about_bot" },
    { text: "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?", type: "question", subtype: "about_bot" },
    { text: "–ö–∞–∫ –¥–µ–ª–∞?", type: "question", subtype: "general" },
    { text: "–°–∫–æ–ª—å–∫–æ —è –ø–æ—Ç—Ä–∞—Ç–∏–ª?", type: "question", subtype: "data_query" },
  ];

  for (const question of testQuestions) {
    console.log(`–í–æ–ø—Ä–æ—Å: "${question.text}"`);
    try {
      const messageType = {
        type: question.type as "question",
        subtype: question.subtype,
        confidence: 0.9,
        need_logging: false,
      };

      const answer = await answerQuestion(question.text, messageType);
      console.log(`–û—Ç–≤–µ—Ç: ${answer}`);
    } catch (error) {
      console.log(`–û—à–∏–±–∫–∞: ${error}`);
    }
    console.log();
  }
}

async function main() {
  console.log("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ AI —Å–µ—Ä–≤–∏—Å–∞\n");

  try {
    await testClassifyMessageType();
    await testAnswerQuestion();
    console.log("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", error);
  }
}

main();
