/**
 * –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * –ó–∞–ø—É—Å–∫: bun run test src/utils/html-formatter.test.ts
 */

import { HTMLMessageBuilder } from "./html-message-builder";

// –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function testHTMLFormatting() {
  console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...\n");

  // –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  console.log("1. –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:");
  const simpleMessage = HTMLMessageBuilder.createMessage({
    title: "–¢–µ—Å—Ç",
    content: "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
    useEmojis: true,
  });
  console.log(simpleMessage);
  console.log("\n" + "‚îÄ".repeat(50) + "\n");

  // –¢–µ—Å—Ç 2: –¢–∞–±–ª–∏—Ü–∞
  console.log("2. –¢–∞–±–ª–∏—Ü–∞:");
  const table = HTMLMessageBuilder.createTable({
    title: "–¢–µ—Å—Ç–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞",
    headers: ["–ö–æ–ª–æ–Ω–∫–∞ 1", "–ö–æ–ª–æ–Ω–∫–∞ 2"],
    rows: [
      ["–ó–Ω–∞—á–µ–Ω–∏–µ 1", "–ó–Ω–∞—á–µ–Ω–∏–µ 2"],
      ["–ó–Ω–∞—á–µ–Ω–∏–µ 3", "–ó–Ω–∞—á–µ–Ω–∏–µ 4"],
    ],
  });
  console.log(table);
  console.log("\n" + "‚îÄ".repeat(50) + "\n");

  // –¢–µ—Å—Ç 3: –°–ø–∏—Å–æ–∫
  console.log("3. –°–ø–∏—Å–æ–∫:");
  const list = HTMLMessageBuilder.createList({
    title: "–¢–µ—Å—Ç–æ–≤—ã–π —Å–ø–∏—Å–æ–∫",
    items: ["–≠–ª–µ–º–µ–Ω—Ç 1", "–≠–ª–µ–º–µ–Ω—Ç 2", "–≠–ª–µ–º–µ–Ω—Ç 3"],
    type: "numbered",
  });
  console.log(list);
  console.log("\n" + "‚îÄ".repeat(50) + "\n");

  // –¢–µ—Å—Ç 4: –ë–ª–æ–∫ –∫–æ–¥–∞
  console.log("4. –ë–ª–æ–∫ –∫–æ–¥–∞:");
  const codeBlock = HTMLMessageBuilder.createCodeBlock(
    "console.log('Hello, World!');",
    "JavaScript",
    "–ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞",
  );
  console.log(codeBlock);
  console.log("\n" + "‚îÄ".repeat(50) + "\n");

  // –¢–µ—Å—Ç 5: –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  console.log("5. –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:");
  const analysis = HTMLMessageBuilder.createAnalysisResult(
    "–¢–µ—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑",
    "–≠—Ç–æ –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ –∞–Ω–∞–ª–∏–∑–∞",
    ["–î–µ—Ç–∞–ª—å 1", "–î–µ—Ç–∞–ª—å 2"],
    ["–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 1", "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 2"],
  );
  console.log(analysis);
  console.log("\n" + "‚îÄ".repeat(50) + "\n");

  // –¢–µ—Å—Ç 6: –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  console.log("6. –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:");
  const financial = HTMLMessageBuilder.createFinancialInfo(
    "–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á—ë—Ç",
    "1000",
    "‚ÇΩ",
    { –î–æ—Ö–æ–¥: "1000 ‚ÇΩ", –†–∞—Å—Ö–æ–¥: "500 ‚ÇΩ" },
    "up",
  );
  console.log(financial);
  console.log("\n" + "‚îÄ".repeat(50) + "\n");

  // –¢–µ—Å—Ç 7: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–¥–∞—á–µ
  console.log("7. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–¥–∞—á–µ:");
  const task = HTMLMessageBuilder.createTaskInfo(
    "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞",
    "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–¥–∞—á–∏",
    "high",
    "2024-12-31",
    "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
  );
  console.log(task);

  console.log("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!");
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  testHTMLFormatting();
}

export { testHTMLFormatting };
