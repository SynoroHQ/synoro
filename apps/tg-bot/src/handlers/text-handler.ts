import { Context } from "grammy";

import { fastResponseSystem } from "../utils/fast-response-system";
import { formatForTelegram } from "../utils/telegram-formatter";

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å Fast Response System
 */
export async function handleText(ctx: Context) {
  try {
    const text = ctx.message?.text || "";

    console.log(`üìù Text handler: "${text}" from user ${ctx.from?.id}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –¥–∞—Ç—å –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç
    const fastResponse = fastResponseSystem.analyzeMessage(text);

    if (fastResponse.shouldSendFast) {
      console.log(
        `‚ö° Fast response in text handler: ${fastResponse.processingType}`,
      );

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç
      await ctx.reply(fastResponse.fastResponse);
      return;
    }

    // –ï—Å–ª–∏ –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const response =
      "–ü–æ–Ω—è–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –î–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /smart";

    const formattedResponse = formatForTelegram(response, {
      useEmojis: true,
      useMarkdown: true,
      addSeparators: false,
    });

    await ctx.reply(formattedResponse.text, {
      parse_mode: formattedResponse.parse_mode || "MarkdownV2",
    });
  } catch (error) {
    console.error("Error in text handler:", error);
    await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
  }
}
