#!/usr/bin/env bun

/**
 * üß™ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –≤ —Ç—Ä–µ–π—Å–∏–Ω–≥
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Ç–µ–ø–µ—Ä—å –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
 * –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏—é –¥–ª—è —Ç—Ä–µ–π—Å–∏–Ω–≥–∞
 */

console.log("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –≤ —Ç—Ä–µ–π—Å–∏–Ω–≥\n");

// 1. –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
console.log("1Ô∏è‚É£ –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:");
const conversationContext = {
  conversationId: "conv_" + Date.now(),
  totalMessages: 25,
  messages: [
    {
      id: "msg-1",
      role: "user" as const,
      content: { text: "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?" },
      createdAt: new Date(Date.now() - 120000),
    },
    {
      id: "msg-2",
      role: "assistant" as const,
      content: { text: "–ü—Ä–∏–≤–µ—Ç! –£ –º–µ–Ω—è –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ, —Å–ø–∞—Å–∏–±–æ! üòä –ö–∞–∫ –¥–µ–ª–∞ —É —Ç–µ–±—è?" },
      createdAt: new Date(Date.now() - 90000),
    },
    {
      id: "msg-3",
      role: "user" as const,
      content: { text: "–•–æ—Ä–æ—à–æ! –ú–æ–∂–µ—à—å –ø–æ–º–æ—á—å —Å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∑–∞–¥–∞—á?" },
      createdAt: new Date(Date.now() - 60000),
    },
    {
      id: "msg-4",
      role: "assistant" as const,
      content: { text: "–ö–æ–Ω–µ—á–Ω–æ! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?" },
      createdAt: new Date(Date.now() - 30000),
    },
    {
      id: "msg-5",
      role: "user" as const,
      content: { text: "–ù—É–∂–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –∫ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–π –≤—Å—Ç—Ä–µ—á–µ" },
      createdAt: new Date(),
    },
  ],
  hasMoreMessages: true,
};

console.log("   üí¨ Conversation Context:");
console.log("   ", JSON.stringify(conversationContext, null, 2));
console.log();

// 2. –£–º–Ω–∞—è –æ–±—Ä–µ–∑–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
console.log("2Ô∏è‚É£ –£–º–Ω–∞—è –æ–±—Ä–µ–∑–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:");
const maxTokens = 2000; // –î–ª—è –≤–æ–ø—Ä–æ—Å–∞
const trimmedContext = conversationContext.messages.slice(-3); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–æ–æ–±—â–µ–Ω–∏—è

console.log("   ‚úÇÔ∏è  Trimmed Context:");
console.log("   ", JSON.stringify(trimmedContext, null, 2));
console.log();

// 3. –°–æ–∑–¥–∞–Ω–∏–µ AgentContext —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
console.log("3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ AgentContext —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:");
const agentContext = {
  userId: "user-123",
  chatId: "chat-456",
  messageId: "msg-789",
  channel: "telegram",
  metadata: {
    channel: "telegram",
    userId: "user-123",
    conversationId: conversationContext.conversationId,
    chatId: "chat-456",
    messageId: "msg-789",
    contextMessageCount: trimmedContext.length,
    agentMode: true,
    
    // üÜï –ö–û–ù–¢–ï–ö–°–¢ –†–ê–ó–ì–û–í–û–†–ê –î–õ–Ø –¢–†–ï–ô–°–ò–ù–ì–ê
    conversationContext: {
      conversationId: conversationContext.conversationId,
      totalMessages: conversationContext.totalMessages,
      contextMessages: trimmedContext.length,
      hasMoreMessages: conversationContext.hasMoreMessages,
    },
    
    // üÜï –ò–°–¢–û–†–ò–Ø –°–û–û–ë–©–ï–ù–ò–ô –î–õ–Ø –¢–†–ï–ô–°–ò–ù–ì–ê
    conversationHistory: trimmedContext.map(msg => ({
      id: msg.id,
      role: msg.role,
      content: msg.content.text,
      createdAt: msg.createdAt,
    })),
  },
};

console.log("   ü§ñ Agent Context:");
console.log("   ", JSON.stringify(agentContext, null, 2));
console.log();

// 4. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
console.log("4Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:");
const telemetry = {
  functionId: "agent-router-routing",
  metadata: {
    agentName: "Router Agent",
    taskType: "routing",
    taskId: "task-" + Date.now(),
    userId: agentContext.userId,
    channel: agentContext.channel,
    chatId: agentContext.chatId,
    messageId: agentContext.messageId,
    
    // üÜï –ö–û–ù–¢–ï–ö–°–¢ –†–ê–ó–ì–û–í–û–†–ê –í –¢–ï–õ–ï–ú–ï–¢–†–ò–ò
    conversationContext: agentContext.metadata.conversationContext,
    conversationHistory: agentContext.metadata.conversationHistory,
    conversationId: agentContext.metadata.conversationId,
    contextMessageCount: agentContext.metadata.contextMessageCount,
  },
};

console.log("   üìä Telemetry with Context:");
console.log("   ", JSON.stringify(telemetry, null, 2));
console.log();

// 5. –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ —Ç—Ä–µ–π—Å–∏–Ω–≥–µ
console.log("5Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ —Ç—Ä–µ–π—Å–∏–Ω–≥–µ:");
const tracingAnalysis = {
  hasConversationContext: !!telemetry.metadata.conversationContext,
  hasConversationHistory: !!telemetry.metadata.conversationHistory,
  conversationId: telemetry.metadata.conversationId,
  totalMessages: telemetry.metadata.conversationContext?.totalMessages,
  contextMessages: telemetry.metadata.conversationContext?.contextMessages,
  hasMoreMessages: telemetry.metadata.conversationContext?.hasMoreMessages,
  historyLength: telemetry.metadata.conversationHistory?.length,
  lastMessage: telemetry.metadata.conversationHistory?.[telemetry.metadata.conversationHistory.length - 1],
};

console.log("   üîç Tracing Analysis:");
Object.entries(tracingAnalysis).forEach(([key, value]) => {
  if (key === "lastMessage" && value) {
    console.log(`   ${key}: ${value.role} - "${value.content}"`);
  } else {
    console.log(`   ${key}: ${value}`);
  }
});
console.log();

// 6. –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ —Ç—Ä–µ–π—Å–∏–Ω–≥–µ
console.log("6Ô∏è‚É£ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ —Ç—Ä–µ–π—Å–∏–Ω–≥–µ:");
const benefits = [
  "‚úÖ –ü–æ–ª–Ω–∞—è –≤–∏–¥–∏–º–æ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏–∏ –±–µ—Å–µ–¥—ã –≤ –ª–æ–≥–∞—Ö",
  "‚úÖ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏",
  "‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –∞–≥–µ–Ω—Ç–∞–º–∏",
  "‚úÖ –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
  "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
  "‚úÖ –û—Ç–ª–∞–¥–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –ø–æ—Ç–µ—Ä–µ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
];

benefits.forEach(benefit => {
  console.log(`   ${benefit}`);
});
console.log();

// 7. –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ
console.log("7Ô∏è‚É£ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ:");
const monitoringExample = {
  alert: "High context loss detected",
  conversationId: telemetry.metadata.conversationId,
  issue: "Context reduced from 25 to 3 messages",
  impact: "May affect response quality",
  recommendation: "Check context trimming logic",
  context: {
    original: telemetry.metadata.conversationContext?.totalMessages,
    current: telemetry.metadata.conversationContext?.contextMessages,
    loss: (telemetry.metadata.conversationContext?.totalMessages || 0) - (telemetry.metadata.conversationContext?.contextMessages || 0),
  },
};

console.log("   üö® Monitoring Alert Example:");
console.log("   ", JSON.stringify(monitoringExample, null, 2));
console.log();

console.log("üéØ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ:");
console.log("   ‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Ç–µ–ø–µ—Ä—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ —Ç—Ä–µ–π—Å–∏–Ω–≥");
console.log("   ‚úÖ –¢–µ–ª–µ–º–µ—Ç—Ä–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –∏—Å—Ç–æ—Ä–∏—é –±–µ—Å–µ–¥—ã –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞");
console.log("   ‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –º–æ–∂–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞");
console.log("   ‚úÖ –£–ª—É—á—à–µ–Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –æ—Ç–ª–∞–¥–∫–∞ –∞–≥–µ–Ω—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã");
console.log();
console.log("üöÄ –°–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–π—Å–∏–Ω–≥–∞ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!");
