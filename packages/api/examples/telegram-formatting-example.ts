import { AgentManager } from "../src/lib/agents/agent-manager";
import { globalAgentRegistry } from "../src/lib/agents/agent-registry";

/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è TelegramFormatterAgent
up * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–∞–∫ –∞–≥–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç—ã –¥–ª—è Telegram
 */
async function telegramFormattingExample() {
  console.log("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Telegram");

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∞–≥–µ–Ω—Ç–æ–≤ (—ç—Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –∞–≥–µ–Ω—Ç—ã)
  const agentManager = new AgentManager();

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–∞—Ö
  const agentsInfo = agentManager.getAvailableAgents();
  console.log(`üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã (${agentsInfo.length} —à—Ç.):`);
  agentsInfo.forEach((agent) => {
    console.log(`  - ${agent.name} (${agent.key})`);
  });

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ TelegramFormatterAgent –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
  const telegramFormatter = globalAgentRegistry.get("telegram-formatter");
  if (!telegramFormatter) {
    console.error("‚ùå TelegramFormatterAgent –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–µ—Å—Ç—Ä–µ");
    return;
  }

  console.log(`\n‚úÖ –ù–∞–π–¥–µ–Ω –∞–≥–µ–Ω—Ç: ${telegramFormatter.name}`);

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const testTask = {
    id: "example-task-1",
    type: "telegram-formatting",
    input:
      "–í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ. –†–µ–∑—É–ª—å—Ç–∞—Ç: —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 15000 —Ä—É–±–ª–µ–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤.",
    context: {
      userId: "user-123",
      platform: "telegram",
      channel: "telegram", // –í–∞–∂–Ω–æ: —É–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª Telegram
    },
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –∞–≥–µ–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–¥–∞—á—É
  const canHandle = await telegramFormatter.canHandle(testTask);
  console.log(`\nüîç –ê–≥–µ–Ω—Ç –º–æ–∂–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–¥–∞—á—É: ${canHandle}`);

  if (canHandle) {
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É
    console.log("\n‚öôÔ∏è –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è Telegram...");
    const result = await telegramFormatter.process(testTask);

    if (result.success) {
      console.log("\n‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ:");
      console.log(result.data);
      console.log(
        `\n‚≠ê –£—Ä–æ–≤–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏: ${(result.confidence * 100).toFixed(1)}%`,
      );
    } else {
      console.error(`\n‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${result.error}`);
    }
  }

  // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
  console.log("\nüîÑ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...");

  // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è Telegram
  const telegramContext = {
    userId: "user-123",
    channel: "telegram",
    metadata: {
      platform: "telegram",
      timestamp: new Date().toISOString(),
    },
  };

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∞–≥–µ–Ω—Ç–Ω—É—é —Å–∏—Å—Ç–µ–º—É
  // TelegramFormatterAgent –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω –≤ –∫–æ–Ω—Ü–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
  try {
    const processingResult = await agentManager.processMessage(
      "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –º–æ–∏ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ –º–µ—Å—è—Ü",
      telegramContext,
      {
        useQualityControl: true,
        targetQuality: 0.8,
      },
    );

    console.log("\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–µ—Ä–µ–∑ –∞–≥–µ–Ω—Ç–Ω—É—é —Å–∏—Å—Ç–µ–º—É:");
    console.log(`üìù –û—Ç–≤–µ—Ç: ${processingResult.finalResponse}`);
    console.log(
      `ü§ñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã: ${processingResult.agentsUsed.join(" ‚Üí ")}`,
    );
    console.log(
      `üìä –ö–∞—á–µ—Å—Ç–≤–æ: ${(processingResult.qualityScore * 100).toFixed(1)}%`,
    );
    console.log(
      `‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${processingResult.metadata.processingTime}ms`,
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ TelegramFormatterAgent —É—á–∞—Å—Ç–≤–æ–≤–∞–ª
    if (processingResult.agentsUsed.includes("Telegram Formatter")) {
      console.log("‚úÖ TelegramFormatterAgent —É—Å–ø–µ—à–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ!");
    } else {
      console.log("‚ö†Ô∏è TelegramFormatterAgent –Ω–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ");
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
  }

  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–≥–µ–Ω—Ç–æ–≤
  const agentStats = agentManager.getAgentStats();
  console.log("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤:");
  console.log(`  –í—Å–µ–≥–æ –∞–≥–µ–Ω—Ç–æ–≤: ${agentStats.totalAgents}`);
  console.log(`  –°–ø–∏—Å–æ–∫ –∞–≥–µ–Ω—Ç–æ–≤: ${agentStats.agentList.join(", ")}`);

  console.log("\nüèÅ –ü—Ä–∏–º–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω");
  console.log(
    "\nüí° –¢–µ–ø–µ—Ä—å TelegramFormatterAgent –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –∫–∞–∂–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –¥–ª—è Telegram!",
  );
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–º–µ—Ä
if (require.main === module) {
  telegramFormattingExample().catch(console.error);
}

export { telegramFormattingExample };
