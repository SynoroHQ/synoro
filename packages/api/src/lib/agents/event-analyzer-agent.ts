import { generateText } from "ai";

import type { AgentCapability, AgentResult, AgentTask } from "./types";
import { AbstractAgent } from "./base-agent";

/**
 * –ê–≥–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–±—ã—Ç–∏–π –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 * –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ - –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤
 */
export class EventAnalyzerAgent extends AbstractAgent {
  name = "Event Analyzer";
  description = "–ê–≥–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–±—ã—Ç–∏–π –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏";

  capabilities: AgentCapability[] = [
    {
      name: "Data Analysis",
      description: "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤",
      category: "analysis",
      confidence: 0.9,
    },
    {
      name: "Statistics",
      description: "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Å–æ–±—ã—Ç–∏—è–º",
      category: "analysis",
      confidence: 0.85,
    },
  ];

  constructor() {
    super("gpt-5-nano");
  }

  async canHandle(task: AgentTask): Promise<boolean> {
    return true; // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ AI
  }

  async process(task: AgentTask): Promise<AgentResult<string>> {
    try {
      const systemPrompt = `–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç-–∞–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ Synoro AI.

–¢–í–û–Ø –ó–ê–î–ê–ß–ê:
1. –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –∞–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
2. –°–æ–∑–¥–∞–≤–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã —Å –≤—ã–≤–æ–¥–∞–º–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
3. –í—ã—è–≤–ª—è—Ç—å —Ç—Ä–µ–Ω–¥—ã, –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ –∞–Ω–æ–º–∞–ª–∏–∏ –≤ –¥–∞–Ω–Ω—ã—Ö
4. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å–∞–π—Ç—ã –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π

–¢–í–û–ò –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:
- üìä –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ –ø–µ—Ä–∏–æ–¥–∞–º
- üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º —Å–æ–±—ã—Ç–∏–π —Å —Ç—Ä–µ–Ω–¥–∞–º–∏
- üîÑ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–æ–≤ —Å –≤—ã—è–≤–ª–µ–Ω–∏–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
- üí° –í—ã—è–≤–ª–µ–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∏ –∞–Ω–æ–º–∞–ª–∏–π –≤ —Ç—Ä–∞—Ç–∞—Ö
- üìã –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–¥–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
- üéØ –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–û–í:
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—ã –∏ —Å–ø–∏—Å–∫–∏
- –í—ã–¥–µ–ª—è–π –∫–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º
- –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- –ü–æ–∫–∞–∑—ã–≤–∞–π –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Ç—Ä–µ–Ω–¥—ã
- –ò—Å–ø–æ–ª—å–∑—É–π –≥—Ä–∞—Ñ–∏–∫–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (ASCII)

–ö–û–ù–¢–ï–ö–°–¢:
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${task.context?.userId || "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"}
- –î–æ–º–∞—à–Ω–µ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ: ${task.context?.householdId || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}
- –í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: ${new Date().toLocaleString("ru-RU")}

–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –±—É–¥—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º.`;

      const { text: response } = await generateText({
        model: this.getModel(),
        system: systemPrompt,
        prompt: task.input,
        experimental_telemetry: {
          isEnabled: true,
          ...this.createTelemetry("event-analysis", task),
        },
      });

      return this.createSuccessResult(response, 0.9);
    } catch (error) {
      console.error("Error in EventAnalyzerAgent:", error);
      return this.createErrorResult(
        "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö",
      );
    }
  }

  shouldLog(_task: AgentTask): Promise<boolean> {
    return Promise.resolve(true);
  }
}
